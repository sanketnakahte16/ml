# -*- coding: utf-8 -*-
"""Lab_01_A3_44.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UgQPyo4WYj0ZRvGUeb_yOIOMMpslzAZX

## Lab - 01
## Exploratory data analysis:is understanding the data sets by summarizing their main characteristics often plotting them visually
"""

# Commented out IPython magic to ensure Python compatibility.
## Importing the libraries
import pandas as pd
import numpy as np
import seaborn as sns                       #visualisation
import matplotlib.pyplot as plt             #visualisation
# %matplotlib inline
sns.set(color_codes=True)

df = pd.read_csv("Mall_Customers.csv")
# To display the top  rows
df.head()

df.tail()     # To display the botton rows

df.dtypes ## Checking the type of data

## Dropping irrelevant columns
df = df.drop(['Genre', 'Age'], axis=1)
df.head(5)

## Renaming the columns
df = df.rename(columns={"CustomerID": "Name"})
df.head(5)

df.shape

## Dropping duplicate rows
duplicate_rows_df = df[df.duplicated()]
print("number of duplicate rows: ", duplicate_rows_df.shape)

df.count()      # Used to count the number of rows

## Removing duplicate rows
df = df.drop_duplicates()
df.head(5)

df.count()

## Dropping missing or null values
print(df.isnull().sum())

df = df.dropna()    # Dropping the missing values.
df.count()

print(df.isnull().sum())   # After dropping the values

## Detecting outliers
sns.boxplot(x=df['Annual Income (k$)'])

sns.boxplot(x=df['Spending Score (1-100)'])

Q1 = df.quantile(0.25)
Q3 = df.quantile(0.75)
IQR = Q3 - Q1
print(IQR)

df = df[~((df < (Q1 - 1.5 * IQR)) |(df > (Q3 + 1.5 * IQR))).any(axis=1)]
df.shape

## Histogram plotting
df['Annual Income (k$)'].value_counts().nlargest(40).plot(kind='bar', figsize=(10,5))
plt.title("Annual income")
plt.ylabel('Annual income')
plt.xlabel('Amt spend');

##Heap map
plt.figure(figsize=(10,5))
c= df.corr()
sns.heatmap(c,cmap="BrBG",annot=True)
c

"""## Conclusion - By performing this experiment we got to know how to perform exploratory data analysis on given data"""

